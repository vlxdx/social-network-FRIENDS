{"version":3,"file":"static/js/632.4fe9d6c5.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ol01b\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true}\r\n                           onBlur={this.deactivateEditMode.bind(this)}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__pvt0D\",\"posts\":\"MyPosts_posts__6cKYR\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__dNP52\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://images.unsplash.com/photo-1522098635833-216c03d81fbe?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8ZnJpZW5kfGVufDB8fDB8fA%3D%3D&w=1000&q=80' />\r\n      { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n    [...props.posts]\r\n    .reverse()\r\n    .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\nimport { withNavigate } from '../../hoc/withNavigate';\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.navigate(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.userId,\r\n      isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\n\r\nexport default compose(\r\n  withNavigate,\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const withNavigate = (Component) => {\r\n   let RedirectTo =(props) => {\r\n       return < Component {...props} navigate={useNavigate() } />\r\n  }      \r\n       return RedirectTo;\r\n  }"],"names":["React","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","large","Preloader","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","postsElements","posts","reverse","map","p","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","navigate","getUserProfile","getStatus","compose","Component","useNavigate","auth","isAuth"],"sourceRoot":""}