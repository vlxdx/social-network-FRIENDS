{"version":3,"file":"static/js/996.8614bd9d.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ol01b\",\"mainPhoto\":\"ProfileInfo_mainPhoto__h1eu9\",\"contact\":\"ProfileInfo_contact__-pltp\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n      </div>\r\n    }\r\n\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__pvt0D\",\"posts\":\"MyPosts_posts__6cKYR\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__dNP52\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://images.unsplash.com/photo-1522098635833-216c03d81fbe?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8ZnJpZW5kfGVufDB8fDB8fA%3D%3D&w=1000&q=80' />\r\n      { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n    [...props.posts]\r\n    .reverse()\r\n    .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__42xr3\"};","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from \"./Profile.module.css\"\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <ProfileInfo savePhoto={props.savePhoto}\r\n                   isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   saveProfile={props.saveProfile}\r\n                   updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from \"redux\";\r\nimport { withNavigate } from '../../hoc/withNavigate';\r\n\r\nexport function withRouter(Children) {\r\n  return (props) => {\r\n\r\n    const match = { params: useParams() };\r\n    return <Children {...props} match={match} />\r\n  }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.navigate(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n        this.refreshProfile();\r\n    }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}/>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.userId,\r\n      isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\n\r\nexport default compose(\r\n  withNavigate,\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);","import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const withNavigate = (Component) => {\r\n   let RedirectTo =(props) => {\r\n       return < Component {...props} navigate={useNavigate() } />\r\n  }      \r\n       return RedirectTo;\r\n  }"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","React","postsElements","posts","reverse","p","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","withRouter","Children","match","params","useParams","ProfileContainer","userId","this","authorizedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","Component","useNavigate","auth","isAuth"],"sourceRoot":""}